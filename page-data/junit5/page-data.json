{"componentChunkName":"component---src-templates-post-jsx","path":"/junit5/","result":{"data":{"site":{"siteMetadata":{"title":"kivv00ng"}},"markdownRemark":{"id":"2070a2f6-a7e6-5798-94ea-59551fcb1cbb","excerpt":"Junit5 란? JUnit5는 자바 프로그래밍 언어용 유닛 테스트 프레임 워크로 자바8이상부터 사용가능하다. 5버전은 이전 버전과 달리 (JUnitPlatform + JUnitJupiter + JUnitVintage)로 구성되어 있다. JunitPlatform: JUnit 플랫폼은 JVM에서 테스트 프레임워크를 시작하기 위한 기반 역할을 한다.또 Tes…","html":"<h2>Junit5 란?</h2>\n<p>JUnit5는 자바 프로그래밍 언어용 유닛 테스트 프레임 워크로 자바8이상부터 사용가능하다.<br>\n5버전은 이전 버전과 달리 (JUnitPlatform + JUnitJupiter + JUnitVintage)로 구성되어 있다.</p>\n<ul>\n<li><strong>JunitPlatform</strong>: JUnit 플랫폼은 JVM에서 테스트 프레임워크를 시작하기 위한 기반 역할을 한다.또 TestEngine(인터페이스) 플랫폼에서 실행되는 테스트 API를 정의하여 주고,이를 바탕으로 만든 사용자 테스트 코드를 실행 가능하도록 해준다.(jUnit platfrom 엔진 제공)</li>\n<li><strong>jUnitJupiter</strong>: JUnit Jupiter 는 JUnit 5에서 테스트 및 확장을 작성하기 위한 프로그래밍 모델 과 확장 모델 의 조합이다.</li>\n<li><strong>JunitVintage</strong>: JUnit 3 및 JUnit 4 기반 테스트를 실행 하기 위한 를 제공합니다.</li>\n</ul>\n<h2>어노테이션</h2>\n<ul>\n<li>@Test : 메서드가 테스트 메서드임을 나타냅니다.</li>\n<li>@ParameterizedTest : 메서드가 매개 변수가 있는 테스트임을 나타냅니다.</li>\n<li>@DisplayName : 테스트 클래스 또는 테스트 메서드에 대한 사용자 지정 이름을 설정합니다.</li>\n<li>@BeforeEach : 모든 테스트 메소드 실행 전에 실행되는 메소드입니다.</li>\n<li>@AfterEach : 모든 테스트 메소드 실행이 끝나면 실행되는 메소드입니다.</li>\n<li>@Disable : 테스트 클래스나 테스트 메소드를 사용하지 않도록 할 때 사용됩니다.</li>\n<li>@Timeout : 주어진 시간안에 실행을 못할 경우 실패하도록 하는데 사용됩니다.</li>\n</ul>\n<p>* <strong>더 많이 알고싶다면</strong> : <a href=\"https://junit.org/junit5/docs/current/user-guide/#writing-tests-annotations\">https://junit.org/junit5/docs/current/user-guide/#writing-tests-annotations</a></p>\n<h2>@Parameterized Tests</h2>\n<h4>@ValueSource</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@ValueSource</span><span class=\"token punctuation\">(</span>strings <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"racecar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"radar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"able was I ere I saw elba\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">palindromes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@ValueSource</span><span class=\"token punctuation\">(</span>ints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithValueSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argument<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span>argument <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> argument <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>@NullSource, @EmptySource</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@NullSource</span>\n<span class=\"token annotation punctuation\">@EmptySource</span>\n<span class=\"token comment\">//@NullAndEmptySource 위의 두개 합친 것도 가능</span>\n<span class=\"token comment\">//@ValueSource(strings = { \" \", \"   \", \"\\t\", \"\\n\" })</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">nullEmptyAndBlankStrings</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>@EnumSource</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@EnumSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChronoUnit</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithEnumSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TemporalUnit</span> unit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span>unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>@MethodSource</h4>\n<p>@MethodSource테스트 클래스 또는 외부 클래스의 하나 이상의 팩토리 메소드를 참조할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringProvider\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithExplicitLocalMethodSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> argument<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span>argument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">stringProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// =================================================</span>\n\n<span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"range\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithRangeMethodSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argument<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertNotEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> argument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">IntStream</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">IntStream</span><span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>팩토리 메소드 이름을 명시적으로 제공하지 않으면 @MethodSourceJUnit Jupiter는 규칙에 따라 현재 메소드와 동일한 이름을 가진 팩토리 메소드를 검색한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@MethodSource</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithDefaultLocalMethodSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> argument<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span>argument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">testWithDefaultLocalMethodSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>매개변수가 여러개일 경우</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringIntAndListProvider\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testWithMultiArgMethodSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> num <span class=\"token operator\">&lt;=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">stringIntAndListProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">arguments</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">arguments</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>@CsvSource</h4>\n<p>인수 목록을 쉼표로 구분된 값(즉, CSV 리터럴)으로 표현한다.<br>\n기본 구분자는 쉼표( ,)이지만 'delimiter' 속성을 설정하여 다른 문자를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n<span class=\"token annotation punctuation\">@CsvSource</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"1:true\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2:true\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3:true\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4:false\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5:false\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delimiter <span class=\"token operator\">=</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">set_contains_true_false</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> element<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> expected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//결과 1, 2, 3</span>\n        <span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span>element <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//테스트 통과..</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>참조</h2>\n<ul>\n<li><a href=\"https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests\">https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests</a></li>\n</ul>","frontmatter":{"title":"Junit5","date":"October 25, 2022","update":"October 25, 2022","tags":["junit5","java"],"series":null},"fields":{"slug":"/junit5/","readingTime":{"minutes":3.99}}},"seriesList":{"edges":[{"node":{"id":"542384f2-bc41-5886-83d8-e0009636cce8","fields":{"slug":"/writing-guide-kr/"},"frontmatter":{"title":"작성 가이드"}}},{"node":{"id":"77d90a7d-6c34-5192-bc0d-5421974569c0","fields":{"slug":"/stream/"},"frontmatter":{"title":"Stream"}}},{"node":{"id":"c169fdab-3c63-59da-b404-3f490bfe027f","fields":{"slug":"/1주차/"},"frontmatter":{"title":"1주차를 마치고"}}},{"node":{"id":"324eeba4-3eed-5f6c-a290-b571c9f9e0ff","fields":{"slug":"/Enum/"},"frontmatter":{"title":"Enum"}}},{"node":{"id":"2070a2f6-a7e6-5798-94ea-59551fcb1cbb","fields":{"slug":"/junit5/"},"frontmatter":{"title":"Junit5"}}}]},"previous":{"fields":{"slug":"/Enum/"},"frontmatter":{"title":"Enum"}},"next":null},"pageContext":{"id":"2070a2f6-a7e6-5798-94ea-59551fcb1cbb","series":null,"previousPostId":"324eeba4-3eed-5f6c-a290-b571c9f9e0ff","nextPostId":null}},"staticQueryHashes":[]}